<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_PC</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize Variables
image_speed = 0;
invincible = false;
can_shoot = true;
has_key = false;
spd = 5;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>can_shoot = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>invincible = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Movement

if (keyboard_check(vk_up) &amp;&amp; keyboard_check(vk_right) &amp;&amp; place_free(x + spd, y - spd)) { //moving NE
   x += spd;
   y -= spd;
   image_index = 4;
   direction = 45;
}

else if (keyboard_check(vk_down) &amp;&amp; keyboard_check(vk_right) &amp;&amp; place_free(x + spd, y + spd)) { //moving SE
     x += spd;
     y += spd;
     image_index = spd;
     direction = 315;
}

else if (keyboard_check(vk_down) &amp;&amp; keyboard_check(vk_left) &amp;&amp; place_free(x - spd, y + spd)) { //moving SW
     x -= spd;
     y += spd;
     image_index = 6;
     direction = 225;
}

else if (keyboard_check(vk_up) &amp;&amp; keyboard_check(vk_left) &amp;&amp; place_free(x - spd, y - spd)) { //moving NW
     x -= spd;
     y -= spd;
     image_index = 7;
     direction = 135;
}

else if (keyboard_check(vk_up) &amp;&amp; place_free(x, y - spd)) { //moving N
     y -= spd;
     image_index = 1;
     direction = 90;
}

else if (keyboard_check(vk_right) &amp;&amp; place_free(x + spd, y)) { //moving E
     x += spd;
     image_index = 2;
     direction = 0;
}

else if (keyboard_check(vk_down) &amp;&amp; place_free(x, y + spd)) { //moving S
     y += spd;
     image_index = 0;
     direction = 270;
}

else if (keyboard_check(vk_left) &amp;&amp; place_free(x - spd, y)) { //moving W
     x -= spd;
     image_index = 3;
     direction = 180;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Damage
if (collision_rectangle(x + 2, y + 2, x + 25, y + 50, obj_enemy, false, false) != noone &amp;&amp; !invincible) {
   health -= 10;
   invincible = true;
   alarm[0] = 90;
   audio_play_sound(snd_playerHit, 0, false);
}

if (collision_rectangle(x + 2, y + 2, x + 25, y + 50, obj_enemyBullet, false, false) != noone &amp;&amp; !invincible) {
   health -= 5;
   invincible = true;
   alarm[0] = 90;
   audio_play_sound(snd_playerHit, 0, false);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Shooting
if (keyboard_check(vk_shift) &amp;&amp; can_shoot) {
   var bullet = instance_create(x + 13, y + 26, obj_playerBullet);
   with (bullet) {
        direction = other.direction;
        speed = 10;     
   }
   can_shoot = false;
   alarm[1] = 30;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Key and Lock

var key = collision_rectangle(x, y, x + 27, y + 52, obj_key, false, true);

if (key != noone) {
   with (key) instance_destroy();
   has_key = true;
}

if (collision_rectangle(x, y, x + 27, y + 52, obj_lock, false, true) &amp;&amp; has_key) {
   room_goto(rm_secondLevel);
   audio_play_sound(snd_nextRoom, 0, false);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();

if (invincible) draw_sprite(spr_invincible, 0, 128, 34);

if (has_key) draw_sprite(spr_key, 0, 134, 66);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
